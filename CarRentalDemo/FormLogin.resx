<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>